/*
 * SerialType.h
 *
 *  Created on: May 1, 2013
 *      Author: julien
 */

#ifndef SERIALTYPE_H_
#define SERIALTYPE_H_

typedef enum
{
	SERIAL_NO_PARITY,
	SERIAL_ODD_PARITY,
	SERIAL_EVEN_PARITY
} Parity;

typedef enum
{
	SERIAL_1_STOP_BIT,
	SERIAL_2_STOP_BIT
} StopBits;

typedef enum
{
	SERIAL_8_BITS_DATA,
	SERIAL_9_BITS_DATA
} DataBits;

typedef enum
{
	SERIAL_NO_HW_FLOW_CTRL,
	SERIAL_HW_FLOW_CTRL_RTS,
	SERIAL_HW_FLOW_CTRL_CTS,
	SERIAL_HW_FLOW_CTRL_RTS_CTS
} HwFlowCtrl;

typedef enum
{
	SERIAL_SIMPLEX_RX,
	SERIAL_SIMPLEX_TX,
	SERIAL_HALF_DUPLEX,
	SERIAL_FULL_DUPLEX
} LinkMode;

typedef enum
{
	SERIAL_1200_BAUD = 1200,
	SERIAL_2400_BAUD = 2400,
	SERIAL_9600_BAUD = 9600,
	SERIAL_19200_BAUD = 19200,
	SERIAL_38400_BAUD = 38400,
	SERIAL_57600_BAUD = 57600,
	SERIAL_115200_BAUD = 115200
} BaudRate;

typedef enum
{
	SERIAL_INT_DISEABLE = 0,
	SERIAL_INT_ENABLE = 1
} InterruptSetting;

typedef enum
{
	SERIAL_INIT_ERROR,
	SERIAL_OVERRUN_ERROR,
	SERIAL_NOIDE_ERROR,
	SERIAL_FRAMING_ERROR,
	SERIAL_PARITY_ERROR,
	SERIAL_OK
} SerialStatus;


#endif /* SERIALTYPE_H_ */
